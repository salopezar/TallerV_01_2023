/*
 * Gpio_test.c
 *
 *  Created on: 3/04/2023
 *      Author: santiago
 */
#include <stdint.h>
#include "stm32f4xx.h"
#include "GPIOxDriver.h"
#include "BasicTimer.h"

uint8_t entrada = 0;
GPIO_Handler_t handlerPinDT 	= {0};
GPIO_Handler_t handlerBlinkyPin = {0};
BasicTimer_Handler_t handlerTim2 	= {0};

void init_Hardware (void);
int main (void){
	init_Hardware();
	while(1){

		entrada = GPIO_ReadPin(&handlerPinDT);
	}
}

void init_Hardware (void){
	handlerPinDT.pGPIOx 								= GPIOC;
	handlerPinDT.GPIO_PinConfig.GPIO_PinNumber			= PIN_12;
	handlerPinDT.GPIO_PinConfig.GPIO_PinMode			= GPIO_MODE_IN;
	handlerPinDT.GPIO_PinConfig.GPIO_PinPuPdControl		= GPIO_PUPDR_NOTHING;

    // Se carga la configuraci贸n.
	GPIO_Config(&handlerPinDT);

	handlerBlinkyPin.pGPIOx 								= GPIOA;
	handlerBlinkyPin.GPIO_PinConfig.GPIO_PinNumber			= PIN_5;
	handlerBlinkyPin.GPIO_PinConfig.GPIO_PinMode			= GPIO_MODE_OUT;
	handlerBlinkyPin.GPIO_PinConfig.GPIO_PinOPType			= GPIO_OTYPE_PUSHPULL;
	handlerBlinkyPin.GPIO_PinConfig.GPIO_PinPuPdControl	    = GPIO_PUPDR_NOTHING;
	handlerBlinkyPin.GPIO_PinConfig.GPIO_PinSpeed			= GPIO_OSPEED_FAST;

	// Se selecciona el TIMER que se elegi贸 trabajar en el programa.
	handlerTim2.ptrTIMx 	= TIM2;

	// Configuraci贸n general en que se va a manejar el timer.
	handlerTim2.TIMx_Config.TIMx_mode			= BTIMER_MODE_UP;
	handlerTim2.TIMx_Config.TIMx_period			= 250;
	handlerTim2.TIMx_Config.TIMx_speed			= BTIMER_SPEED_1ms;

	// Se carga lo que se hizo sobre el pin A5
	GPIO_Config(&handlerBlinkyPin);
	GPIO_WritePin(&handlerBlinkyPin, SET);

	/* Se carga ahora la configuraci贸n del TIMER */
	BasicTimer_Config(&handlerTim2);
}

void BasicTimer2_Callback(void){
	GPIOxTooglePin(&handlerBlinkyPin);
}
